// <auto-generated />
using System;
using MedSched.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedSched.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241115172031_seeding_db")]
    partial class seeding_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MedSched.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("appointment_date");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2024, 11, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2024, 11, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 2,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDate = new DateTime(2024, 11, 22, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 3,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDate = new DateTime(2024, 11, 23, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 4,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDate = new DateTime(2024, 11, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 5,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 6,
                            AppointmentDate = new DateTime(2024, 11, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 6,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 7,
                            AppointmentDate = new DateTime(2024, 11, 26, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 7,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 8,
                            AppointmentDate = new DateTime(2024, 11, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 8,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 9,
                            AppointmentDate = new DateTime(2024, 11, 28, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 9,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 10,
                            AppointmentDate = new DateTime(2024, 11, 29, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            PatientId = 10,
                            Status = "Canceled"
                        });
                });

            modelBuilder.Entity("MedSched.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Availability")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("availability");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("specialization");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = true,
                            Email = "doc1@example.com",
                            Name = "Dr. John Doe",
                            Password = "123",
                            Specialization = "Cardiologist"
                        },
                        new
                        {
                            Id = 2,
                            Availability = true,
                            Email = "doc2@example.com",
                            Name = "Dr. Jane Smith",
                            Password = "123",
                            Specialization = "Neurologist"
                        },
                        new
                        {
                            Id = 3,
                            Availability = false,
                            Email = "doc3@example.com",
                            Name = "Dr. Emily Brown",
                            Password = "123",
                            Specialization = "Dermatologist"
                        },
                        new
                        {
                            Id = 4,
                            Availability = true,
                            Email = "doc4@example.com",
                            Name = "Dr. Michael Johnson",
                            Password = "123",
                            Specialization = "Orthopedist"
                        },
                        new
                        {
                            Id = 5,
                            Availability = true,
                            Email = "doc5@example.com",
                            Name = "Dr. Sarah Lee",
                            Password = "123",
                            Specialization = "Pediatrician"
                        },
                        new
                        {
                            Id = 6,
                            Availability = true,
                            Email = "doc6@example.com",
                            Name = "Dr. Robert White",
                            Password = "123",
                            Specialization = "General Surgeon"
                        },
                        new
                        {
                            Id = 7,
                            Availability = true,
                            Email = "doc7@example.com",
                            Name = "Dr. Olivia Harris",
                            Password = "123",
                            Specialization = "Psychiatrist"
                        },
                        new
                        {
                            Id = 8,
                            Availability = false,
                            Email = "doc8@example.com",
                            Name = "Dr. William Clark",
                            Password = "123",
                            Specialization = "Gastroenterologist"
                        },
                        new
                        {
                            Id = 9,
                            Availability = true,
                            Email = "doc9@example.com",
                            Name = "Dr. Patricia Lewis",
                            Password = "123",
                            Specialization = "Gynecologist"
                        },
                        new
                        {
                            Id = 10,
                            Availability = true,
                            Email = "doc10@example.com",
                            Name = "Dr. James Walker",
                            Password = "123",
                            Specialization = "Anesthesiologist"
                        });
                });

            modelBuilder.Entity("MedSched.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthdate");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("contact_number");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1985, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-1234",
                            Email = "user1@example.com",
                            Name = "John Doe",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1990, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-5678",
                            Email = "user2@example.com",
                            Name = "Jane Smith",
                            Password = "123"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1979, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-8765",
                            Email = "user3@example.com",
                            Name = "Emily Johnson",
                            Password = "123"
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-4321",
                            Email = "user4@example.com",
                            Name = "Michael Brown",
                            Password = "123"
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1988, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-8763",
                            Email = "user5@example.com",
                            Name = "Sarah Lee",
                            Password = "123"
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1995, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-1029",
                            Email = "user6@example.com",
                            Name = "Robert White",
                            Password = "123"
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(1982, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-3245",
                            Email = "user7@example.com",
                            Name = "Olivia Harris",
                            Password = "123"
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(1993, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-6543",
                            Email = "user8@example.com",
                            Name = "William Clark",
                            Password = "123"
                        },
                        new
                        {
                            Id = 9,
                            Birthdate = new DateTime(1991, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-2345",
                            Email = "user9@example.com",
                            Name = "Patricia Lewis",
                            Password = "123"
                        },
                        new
                        {
                            Id = 10,
                            Birthdate = new DateTime(1980, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNumber = "555-4329",
                            Email = "user10@example.com",
                            Name = "James Walker",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("MedSched.Models.Appointment", b =>
                {
                    b.HasOne("MedSched.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedSched.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("MedSched.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("MedSched.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
